{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mflha\\\\Documents\\\\GitHub\\\\SportSched\\\\sports-reservation-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { login, logout, register } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsAuthenticated(!!token);\n    setIsLoading(false);\n  }, []);\n  const loginUser = async (username, password) => {\n    try {\n      await login(username, password);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const registerUser = async userData => {\n    try {\n      await register(userData);\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logoutUser = async () => {\n    try {\n      await logout();\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Still remove token and update state even if API call fails\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      isLoading,\n      login: loginUser,\n      register: registerUser,\n      logout: logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"QGOAXroSjAVQAlauW9LqDUcn+wM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","login","logout","register","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","token","localStorage","getItem","loginUser","username","password","error","console","registerUser","userData","logoutUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mflha/Documents/GitHub/SportSched/sports-reservation-frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport { login, logout, register } from '../services/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsAuthenticated(!!token);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const loginUser = async (username, password) => {\r\n    try {\r\n      await login(username, password);\r\n      setIsAuthenticated(true);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const registerUser = async (userData) => {\r\n    try {\r\n      await register(userData);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logoutUser = async () => {\r\n    try {\r\n      await logout();\r\n      setIsAuthenticated(false);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      // Still remove token and update state even if API call fails\r\n      localStorage.removeItem('token');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      isAuthenticated,\r\n      isLoading,\r\n      login: loginUser,\r\n      register: registerUser,\r\n      logout: logoutUser\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CL,kBAAkB,CAAC,CAAC,CAACG,KAAK,CAAC;IAC3BD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC9C,IAAI;MACF,MAAMlB,KAAK,CAACiB,QAAQ,EAAEC,QAAQ,CAAC;MAC/BR,kBAAkB,CAAC,IAAI,CAAC;MACxB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAI;MACF,MAAMpB,QAAQ,CAACoB,QAAQ,CAAC;MACxB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMtB,MAAM,CAAC,CAAC;MACdS,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC;MACAL,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;MAChCd,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAC3BjB,eAAe;MACfE,SAAS;MACTX,KAAK,EAAEgB,SAAS;MAChBd,QAAQ,EAAEmB,YAAY;MACtBpB,MAAM,EAAEsB;IACV,CAAE;IAAAhB,QAAA,EACCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAtDWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}