{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Request interceptor for adding the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Auth services\nexport const login = async (username, password) => {\n  const response = await axios.post(`${API_URL}auth/login/`, {\n    username,\n    password\n  });\n  if (response.data.key) {\n    localStorage.setItem('token', response.data.key);\n  }\n  return response.data;\n};\nexport const register = async userData => {\n  return await axios.post(`${API_URL}auth/registration/`, userData);\n};\nexport const logout = async () => {\n  const token = localStorage.getItem('token');\n  await axios.post(`${API_URL}auth/logout/`, {}, {\n    headers: {\n      Authorization: `Token ${token}`\n    }\n  });\n  localStorage.removeItem('token');\n};\n\n// Facility services\nexport const getFacilities = async () => {\n  return await api.get('facilities/');\n};\nexport const getFacility = async id => {\n  return await api.get(`facilities/${id}/`);\n};\n\n// TimeSlot services\nexport const getTimeSlots = async (facilityId, date) => {\n  return await api.get('timeslots/', {\n    params: {\n      facility_id: facilityId,\n      date\n    }\n  });\n};\n\n// Reservation services\nexport const createReservation = async timeSlotId => {\n  return await api.post('reservations/', {\n    time_slot: timeSlotId\n  });\n};\nexport const getMyReservations = async () => {\n  return await api.get('reservations/');\n};\nexport const cancelReservation = async id => {\n  console.log(`API: Cancelling reservation ${id}`);\n  try {\n    const response = await api.delete(`reservations/${id}/`);\n    console.log(`API: Cancellation response:`, response);\n    return response;\n  } catch (error) {\n    console.error(`API: Cancellation error:`, error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","login","username","password","response","post","data","key","setItem","register","userData","logout","Authorization","removeItem","getFacilities","get","getFacility","id","getTimeSlots","facilityId","date","params","facility_id","createReservation","timeSlotId","time_slot","getMyReservations","cancelReservation","console","log","delete"],"sources":["C:/Users/mflha/Documents/GitHub/SportSched/sports-reservation-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api/';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n// Request interceptor for adding the auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Auth services\r\nexport const login = async (username, password) => {\r\n  const response = await axios.post(`${API_URL}auth/login/`, { username, password });\r\n  if (response.data.key) {\r\n    localStorage.setItem('token', response.data.key);\r\n  }\r\n  return response.data;\r\n};\r\n\r\nexport const register = async (userData) => {\r\n  return await axios.post(`${API_URL}auth/registration/`, userData);\r\n};\r\n\r\nexport const logout = async () => {\r\n  const token = localStorage.getItem('token');\r\n  await axios.post(`${API_URL}auth/logout/`, {}, {\r\n    headers: { Authorization: `Token ${token}` }\r\n  });\r\n  localStorage.removeItem('token');\r\n};\r\n\r\n// Facility services\r\nexport const getFacilities = async () => {\r\n  return await api.get('facilities/');\r\n};\r\n\r\nexport const getFacility = async (id) => {\r\n  return await api.get(`facilities/${id}/`);\r\n};\r\n\r\n// TimeSlot services\r\nexport const getTimeSlots = async (facilityId, date) => {\r\n  return await api.get('timeslots/', {\r\n    params: { facility_id: facilityId, date }\r\n  });\r\n};\r\n\r\n// Reservation services\r\nexport const createReservation = async (timeSlotId) => {\r\n  return await api.post('reservations/', { time_slot: timeSlotId });\r\n};\r\n\r\nexport const getMyReservations = async () => {\r\n  return await api.get('reservations/');\r\n};\r\n\r\nexport const cancelReservation = async (id) => {\r\n  console.log(`API: Cancelling reservation ${id}`);\r\n  try {\r\n    const response = await api.delete(`reservations/${id}/`);\r\n    console.log(`API: Cancellation response:`, response);\r\n    return response;\r\n  } catch (error) {\r\n    console.error(`API: Cancellation error:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}